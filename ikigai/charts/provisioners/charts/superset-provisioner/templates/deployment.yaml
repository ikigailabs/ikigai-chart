apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ if eq .Values.global.clusterSize "small" }}1{{ else }}{{ .Values.replicas.service }}{{ end }}
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      serviceAccountName: {{ .Chart.Name }}-serviceaccount
      nodeSelector:
        role: {{ .Values.nodeSelector.role }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      imagePullSecrets:
      - name: harbor-docker-secret
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "superset-provisioner.image.service.repository" . }}/{{ .Values.image.service.imageName }}:{{ include "superset-provisioner.image.service.tag" . }}
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credential-secret
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credential-secret
                  key: aws-secret-access-key
            - name: AWS_DEFAULT_REGION
              valueFrom:
                secretKeyRef:
                  name: aws-credential-secret
                  key: aws-default-region
            - name: CLUSTER_ID
              value: "{{ .Values.global.clusterId }}"
            - name: USE_KUBE_ENVIRONMENT
              value: '{{ include "superset-provisioner.useKubeEnvironment" . }}'
          ports:
            - containerPort: {{ .Values.containerPort.service }}
          resources:
            {{- toYaml .Values.resources.service | nindent 12 }}
          lifecycle:
            preStop:
              exec:
                command:
                  - sleep
                  - "{{ .Values.lifeCycle.preStopPeriod }}"
          startupProbe:
            exec:
              command:
                - cat
                - /tmp/ready
            failureThreshold: 50
            periodSeconds: 10
          volumeMounts:
            - name: library-environment-file
              mountPath: {{ .Values.configMountPath }}/library_environment.yaml
              subPath: library_environment.yaml
            - name: environment-file
              mountPath: {{ .Values.configMountPath }}/environment.yaml
              subPath: environment.yaml
      volumes:
        - name: library-environment-file
          configMap:
            name: library-config-map
        - name: environment-file
          configMap:
            name: {{ .Chart.Name }}-config-map
