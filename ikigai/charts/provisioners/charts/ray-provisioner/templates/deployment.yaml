apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Chart.Name }}
spec:
  {{ if eq .Values.global.clusterSize "small"}}
  replicas: 1
  {{ else }}
  replicas: {{ .Values.replicas.service }}
  {{ end }}
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      serviceAccountName: {{ .Chart.Name }}-serviceaccount
      nodeSelector:
        role: {{ .Values.nodeSelector.role }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ include "ray-provisioner.image.service.repository" . }}/{{ .Values.image.service.imageName }}:{{ include "ray-provisioner.image.service.tag" . }}
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credential-secret
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credential-secret
              key: aws-secret-access-key
        - name: AWS_DEFAULT_REGION
          valueFrom:
            secretKeyRef:
              name: aws-credential-secret
              key: aws-default-region
        - name: CLUSTER_ID
          value: "{{ .Values.global.clusterId }}"
        - name: USE_KUBE_ENVIRONMENT
          value: '{{ include "ray-provisioner.useKubeEnvironment" . }}'

        ports:
        - containerPort: {{ .Values.containerPort.service }}
        resources:
          {{- toYaml .Values.resources.service | nindent 10 }}
        lifecycle:
          preStop:
            exec:
              command:
                - sleep
                - {{ .Values.lifeCycle.preStopPeriod | quote }}
        startupProbe:
          exec:
            command:
              - cat
              - /tmp/ready
          failureThreshold: 50
          periodSeconds: 10
        volumeMounts:
          - name: ray-cluster-manifest-file
            mountPath: /usr/ikigailabs/ray_provisioner/.staging/server/ray_cluster_manifest.yaml
            subPath: ray_cluster_manifest.yaml
      volumes:
        - name: ray-cluster-manifest-file
          configMap:
            name: ray-cluster-manifest-config-map


